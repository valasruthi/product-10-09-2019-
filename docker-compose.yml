version: '2'

services:
  eureka-server:
    build: eureka-server/
    #    restart: always
    network_mode: "host"
    hostname: localhost
    image: eureka-server
    ports:
      - 8761:8761

  config-service:
    build: config-server/
    #    restart: always
    network_mode: "host"
    image: config-service
    hostname: localhost
    ports:
      - 8888:8888

  zuul-api:
    build: zuul-api/
    depends_on:
      - config-service
      - eureka-server392ec21c66a8
    restart: always
    network_mode: "host"
    image: zuul-api
    hostname: localhost
    ports:
      - 8088:8088

  user-login-service:
    build: user-login-service/
    restart: always
    depends_on:
      - mysql
      - rabbitmq
      - eureka-server
      - config-service
        - zuul-api
    network_mode: "host"
    image: user-login-service
    hostname: localhost
    ports:
      - 8085:8085
  ​
  email-service:
    build: email-service/
    depends_on:
      - mysql
      - eureka-server
        - config-service
        - zuul-api
    restart: always
    network_mode: "host"
    image: email-service
    environment:
      WAIT_HOSTS: localhost:8761 ,localhost:9999, localhost:8082
      WAIT_BEFORE_HOSTS: 20
    ports:
      - 8052:8052
    hostname: localhost

  mysql:
    image: mysql
    ports:
      - 3306:3306
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: userdetailsdb
      MYSQL_PASSWORD: root
      MYSQL_USER: root
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - $HOME/data/datasql:/var/lib/mysql
    network_mode: "host"
    hostname: localhost
    restart: always
  ​
  neo4j:
    image: neo4j:latest
    restart: always
    hostname: localhost
    network_mode: "host"
    ports:
      - 7474:7474
      - 7687:7687
    expose:
      - 7474
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/import:/import
    environment:
      - NEO4J_AUTH=neo4j/root123


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    volumes:
      - $HOME/rabbitmqdata:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    hostname: localhost
    network_mode: host


  recommendation-command-service:
    build: recommendation-command-service
    network_mode: "host"
    hostname: localhost
    restart: always
    depends_on:
      - neo4j
      - config-service
      - eureka-server
      - rabbitmq
    ports:
      - 8065:8065

  idea-hamster-profile-service:
    build: idea-hamster-profile-service
    network_mode: "host"
    hostname: localhost
    restart: always
    depends_on:
      - mongo
      - config-service
      - eureka-server
      - rabbitmq
    ports:
      - 8080:8080
  ​
  ​
  service-provider-profile-service:
    build: service-provider-profile-service
    network_mode: "host"
    hostname: localhost
    restart: always
    depends_on:
      - mongo
      - config-service
      - eureka-server
      - rabbitmq
    ports:
      - 8084:8084
  ​
  idea-service:
    build: idea-service
    network_mode: "host"
    hostname: localhost
    restart: always
    depends_on:
      - mongo
      - config-service
      - eureka-server
      - rabbitmq
    ports:
      - 8090:8090
  ​
  team-management-service:
    build: team-management-service
    network_mode: "host"
    hostname: localhost
    #    restart: always
    depends_on:
      - mongo
      - config-service
      - eureka-server
      - rabbitmq
    ports:
      - 8083:8083
#WAIT_HOSTS: comma separated list of pairs host:port for which you want to wait.
#WAIT_HOSTS_TIMEOUT: max number of seconds to wait for the hosts to be available before failure. The default is 30 seconds.
#WAIT_BEFORE_HOSTS: number of seconds to wait (sleep) before start checking for the hosts availability
#WAIT_AFTER_HOSTS: number of seconds to wait (sleep) once all the hosts are available
#WAIT_SLEEP_INTERVAL: number of seconds to sleep between retries. The default is 1 second.
